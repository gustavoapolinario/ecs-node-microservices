Description: >
    This template deploys an Network Load Balancer that exposes our various ECS services.
    We create them it a seperate nested template, so it can be referenced by all of the other nested templates.
Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    EnvironmentName2:
        Description: An environment name that will be prefixed to resource names
        Type: String

    VPC:
        Type: AWS::EC2::VPC::Id
        Description: Choose which VPC the Network Load Balancer should be deployed to

    Subnets:
        Description: Choose which subnets the Network Load Balancer should be deployed to
        Type: List<AWS::EC2::Subnet::Id>

    SecurityGroup:
        Description: Select the Security Group to apply to the Network Load Balancer
        Type: AWS::EC2::SecurityGroup::Id

Resources:

    LoadBalancer:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
            Name: !Join [ "-", [ !Ref EnvironmentName, !Ref EnvironmentName2 ]]
            Subnets: !Ref Subnets
            Tags: 
                - Key: Name
                  Value: !Ref EnvironmentName
            Scheme: internal
            Type: network

    LoadBalancerListener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
            LoadBalancerArn: !Ref LoadBalancer
            Port: 3000
            Protocol: TCP 
            DefaultActions: 
                - Type: forward
                  TargetGroupArn: !Ref DefaultTargetGroup

    # We define a default target group here, as this is a mandatory Parameters
    # when creating an Network Load Balancer Listener. This is not used, instead
    # a target group is created per-service in each service template (../services/*)
    DefaultTargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            Name: !Join [ "-", [ !Ref EnvironmentName, !Ref EnvironmentName2, "default" ]]
            VpcId: !Ref VPC
            Port: 3000
            Protocol: TCP
           
Outputs:

    LoadBalancer:
        Description: A reference to the Network Load Balancer
        Value: !Ref LoadBalancer

    LoadBalancerUrl:
        Description: The URL of the ALB
        Value: !GetAtt LoadBalancer.DNSName

    Listener:
        Description: A reference to a port 3000 listener
        Value: !Ref LoadBalancerListener